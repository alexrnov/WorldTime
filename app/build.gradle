apply plugin: 'com.android.application' // for location service
apply plugin: 'kotlin-android'
// in kotlin-base app kapt is used instead annotationProcessor
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "alexrnov.worldtime"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    // make your app to be compiled by java8 compiler. Necessary for work Truth
    // also added because there were problem with the viewModels() method
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    // added because there were problem with the viewModels() method
    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation 'androidx.navigation:navigation-fragment:2.3.1'
    implementation 'androidx.navigation:navigation-ui:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    // dependencies for lifecycle
    def lifecycle_version = "2.2.0"
    def fragment_version = "1.2.5"

    //implementation "androidx.fragment:fragment:$fragment_version"

    // for view model
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    // KTX extensions for each corresponding Architecture components (in particular coroutines )
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // Annotation processor
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // optional - helpers for implementing LifecycleOwner in a Service
    //implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"
    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    //implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
    // optional - ReactiveStreams support for LiveData
    //implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"
    // optional - Test helpers for LiveData
    //testImplementation "androidx.arch.core:core-testing:$arch_version"
    // to use the viewModels() extension function
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "androidx.activity:activity-ktx:1.1.0"

    // for retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0' // retrofit version
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0' //  GSON converter from retrofit
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'

    // for rxJava
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.17'

    implementation 'com.google.android.gms:play-services-location:17.1.0' // to determine the location

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // tool for find memory leak
    debugImplementation group: 'com.squareup.leakcanary', name: 'leakcanary-android', version: '2.5' // for memory leak tool
    // releaseImplementation group: 'com.squareup.leakcanary', name: 'leakcanary-android', version: '2.5' // for memory leak tool

    // for dagger
    final dagger_version = '2.28'
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kaptTest "com.google.dagger:dagger-compiler:$dagger_version" // for dagger test
    compileOnly 'javax.annotation:javax.annotation-api:1.3.2'
}

repositories {
    google()
    jcenter()
    mavenCentral()
}